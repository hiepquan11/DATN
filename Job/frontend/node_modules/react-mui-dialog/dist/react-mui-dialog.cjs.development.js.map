{"version":3,"file":"react-mui-dialog.cjs.development.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport * as Yup from \"yup\";\n\nimport {\n  Button,\n  ButtonProps,\n  Dialog,\n  DialogActions,\n  DialogActionsProps,\n  DialogContent,\n  DialogContentProps,\n  DialogContentText,\n  DialogContentTextProps,\n  DialogProps,\n  DialogTitle,\n  DialogTitleProps,\n  makeStyles,\n} from \"@material-ui/core\";\nimport {\n  Field,\n  FieldAttributes,\n  Form,\n  Formik,\n  FormikFormProps,\n  FormikHelpers,\n  FormikProps,\n} from \"formik\";\nimport { createContext, useContext } from \"react\";\n\nimport Lazy from \"yup/lib/Lazy\";\nimport Reference from \"yup/lib/Reference\";\nimport { TextField } from \"formik-material-ui\";\nimport startCase from \"lodash/startCase\";\nimport { useReducer } from \"react\";\n\nexport type ActionButtonOptions =\n  | false\n  | { children: string | React.ReactNode; props?: ButtonProps }\n  | { component: React.ReactNode };\n\nexport type FieldOptions<T extends string = string> = Record<\n  T,\n  {\n    initialValue: any;\n    label?: string;\n    fieldProps?: FieldAttributes<any>;\n    component?: React.ReactNode;\n  }\n>;\n\n/**\n * Turns ObjectShape into a generic.\n * See: https://github.com/jquense/yup/blob/3b67dc0b59c8cf05fb5ee00b1560a2ab68ca3918/src/object.ts#L30\n */\ntype YupObjectShape<T extends string> = Record<\n  T,\n  Yup.AnySchema | Reference | Lazy<any, any>\n>;\n\nexport type DialogOptions<\n  FieldNames extends string = string,\n  Fields = FieldOptions<FieldNames>,\n  Values = Record<keyof Fields, string>\n> = Partial<{\n  title: string | React.ReactNode;\n  contentText: string | React.ReactNode;\n  fields: Fields;\n  validationSchema: Yup.ObjectSchema<YupObjectShape<FieldNames>>;\n  cancelButton: ActionButtonOptions;\n  submitButton: ActionButtonOptions;\n  onSubmit: (\n    values: Values,\n    formikHelpers: FormikHelpers<Values>\n  ) => Promise<any>;\n  dialogProps: Omit<DialogProps, \"open\">;\n  subcomponentProps: {\n    dialogTitleProps?: DialogTitleProps;\n    dialogContentProps?: DialogContentProps;\n    dialogContentTextProps?: DialogContentTextProps;\n    dialogActionsProps?: DialogActionsProps;\n    formikProps?: Partial<FormikProps<Values>>;\n    formikFormProps?: FormikFormProps;\n  };\n  customContent: undefined | React.ReactNode;\n}>;\n\ntype OpenDialogAction = {\n  type: \"open\";\n  payload: DialogOptions;\n};\ntype CloseDialogAction = { type: \"close\" };\ntype ResetDialogAction = { type: \"reset\" };\ntype Actions = OpenDialogAction | CloseDialogAction | ResetDialogAction;\ntype State = { open: boolean } & DialogOptions;\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case \"open\":\n      return { ...state, ...action.payload, open: true };\n    case \"close\":\n      return { ...state, open: false };\n    case \"reset\":\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  open: false,\n  title: \"Dialog Title\",\n  contentText: \"Dialog content text\",\n  cancelButton: { children: \"Cancel\" },\n  submitButton: { children: \"Submit\" },\n  fields: {},\n  onSubmit: () => Promise.resolve(),\n  dialogProps: {\n    fullWidth: true,\n    maxWidth: \"sm\",\n  },\n  subcomponentProps: {\n    dialogTitleProps: {},\n    dialogContentProps: {},\n    dialogContentTextProps: {},\n    dialogActionsProps: {},\n    formikProps: {},\n  },\n  customContent: undefined,\n};\n\nexport type OpenDialog = <T extends string>(options: DialogOptions<T>) => void;\n\ntype ContextType = {\n  openDialog: OpenDialog;\n  closeDialog: () => void;\n};\n\nconst DialogContext = createContext<ContextType>({\n  openDialog: () => null,\n  closeDialog: () => null,\n});\n\nconst useStyles = makeStyles(theme => ({\n  dialogContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: `${theme.spacing(2)}px`,\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport const DialogProvider: React.FC = ({ children }) => {\n  // The warning [Warning: findDOMNode is deprecated in StrictMode.] is a known issue:\n  // https://stackoverflow.com/a/63729408\n  const classes = useStyles();\n  const [value, dispatch] = useReducer(reducer, initialState);\n  const {\n    open,\n    onSubmit,\n    title,\n    contentText,\n    fields,\n    validationSchema,\n    cancelButton,\n    submitButton,\n    dialogProps,\n    subcomponentProps: sp,\n    customContent,\n  } = value;\n\n  const initialValues = getInitialValues(fields);\n\n  const openDialog: OpenDialog = options =>\n    dispatch({ type: \"open\", payload: options as DialogOptions });\n  const closeDialog = () => dispatch({ type: \"close\" });\n  const handleExited = () => dispatch({ type: \"reset\" });\n  const handleSubmit = (\n    values: typeof initialValues,\n    formikHelpers: FormikHelpers<typeof initialValues>\n  ) => {\n    if (!onSubmit) return;\n    onSubmit(values, formikHelpers).then(closeDialog);\n  };\n\n  const fieldComponents = Object.entries(\n    fields ?? {}\n  ).map(([name, fieldOptions]) =>\n    \"component\" in fieldOptions ? (\n      fieldOptions.component\n    ) : (\n      <Field\n        component={TextField}\n        variant=\"outlined\"\n        fullWidth\n        label={fieldOptions?.label || startCase(name)}\n        {...fieldOptions.fieldProps}\n        name={name}\n        key={name}\n      />\n    )\n  );\n\n  return (\n    <DialogContext.Provider value={{ openDialog, closeDialog }}>\n      {children}\n      <Dialog open={open} onExited={handleExited} {...dialogProps}>\n        {customContent ? (\n          customContent\n        ) : (\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={handleSubmit}\n            validateOnChange={false}\n            validateOnBlur={false}\n            {...sp?.formikProps}\n          >\n            {formProps => (\n              <Form {...sp?.formikFormProps}>\n                <DialogTitle {...sp?.dialogTitleProps}>{title}</DialogTitle>\n\n                <DialogContent\n                  className={classes.dialogContent}\n                  {...sp?.dialogContentProps}\n                >\n                  {contentText && (\n                    <DialogContentText {...sp?.dialogContentTextProps}>\n                      {contentText}\n                    </DialogContentText>\n                  )}\n                  {!!fieldComponents.length && fieldComponents}\n                </DialogContent>\n\n                <DialogActions {...sp?.dialogActionsProps}>\n                  {cancelButton && \"component\" in cancelButton ? (\n                    cancelButton.component\n                  ) : cancelButton ? (\n                    <Button\n                      onClick={closeDialog}\n                      color=\"primary\"\n                      disabled={formProps.isSubmitting}\n                      {...cancelButton.props}\n                    >\n                      {cancelButton.children}\n                    </Button>\n                  ) : null}\n                  {submitButton && \"component\" in submitButton ? (\n                    submitButton.component\n                  ) : submitButton ? (\n                    <Button\n                      type=\"submit\"\n                      color=\"primary\"\n                      disabled={formProps.isSubmitting}\n                      {...submitButton.props}\n                    >\n                      {submitButton.children}\n                    </Button>\n                  ) : null}\n                </DialogActions>\n              </Form>\n            )}\n          </Formik>\n        )}\n      </Dialog>\n    </DialogContext.Provider>\n  );\n};\n\nexport const useDialog = () => useContext(DialogContext);\n\nconst getInitialValues = (fields: DialogOptions[\"fields\"]) => {\n  return Object.fromEntries(\n    Object.entries(fields ?? {}).map(([name, fieldOptions]) => [\n      name,\n      fieldOptions.initialValue,\n    ])\n  );\n};\n"],"names":["reducer","state","action","type","payload","open","initialState","title","contentText","cancelButton","children","submitButton","fields","onSubmit","Promise","resolve","dialogProps","fullWidth","maxWidth","subcomponentProps","dialogTitleProps","dialogContentProps","dialogContentTextProps","dialogActionsProps","formikProps","customContent","undefined","DialogContext","createContext","openDialog","closeDialog","useStyles","makeStyles","theme","dialogContent","display","flexDirection","gap","spacing","marginBottom","DialogProvider","classes","useReducer","value","dispatch","validationSchema","sp","initialValues","getInitialValues","options","handleExited","handleSubmit","values","formikHelpers","then","fieldComponents","Object","entries","map","name","fieldOptions","component","React","Field","TextField","variant","label","startCase","fieldProps","key","Provider","Dialog","onExited","Formik","validateOnChange","validateOnBlur","formProps","Form","formikFormProps","DialogTitle","DialogContent","className","DialogContentText","length","DialogActions","Button","onClick","color","disabled","isSubmitting","props","useDialog","useContext","fromEntries","initialValue"],"mappings":"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"}