import * as React from "react";
import * as Yup from "yup";
import { ButtonProps, DialogActionsProps, DialogContentProps, DialogContentTextProps, DialogProps, DialogTitleProps } from "@material-ui/core";
import { FieldAttributes, FormikFormProps, FormikHelpers, FormikProps } from "formik";
import Lazy from "yup/lib/Lazy";
import Reference from "yup/lib/Reference";
export declare type ActionButtonOptions = false | {
    children: string | React.ReactNode;
    props?: ButtonProps;
} | {
    component: React.ReactNode;
};
export declare type FieldOptions<T extends string = string> = Record<T, {
    initialValue: any;
    label?: string;
    fieldProps?: FieldAttributes<any>;
    component?: React.ReactNode;
}>;
/**
 * Turns ObjectShape into a generic.
 * See: https://github.com/jquense/yup/blob/3b67dc0b59c8cf05fb5ee00b1560a2ab68ca3918/src/object.ts#L30
 */
declare type YupObjectShape<T extends string> = Record<T, Yup.AnySchema | Reference | Lazy<any, any>>;
export declare type DialogOptions<FieldNames extends string = string, Fields = FieldOptions<FieldNames>, Values = Record<keyof Fields, string>> = Partial<{
    title: string | React.ReactNode;
    contentText: string | React.ReactNode;
    fields: Fields;
    validationSchema: Yup.ObjectSchema<YupObjectShape<FieldNames>>;
    cancelButton: ActionButtonOptions;
    submitButton: ActionButtonOptions;
    onSubmit: (values: Values, formikHelpers: FormikHelpers<Values>) => Promise<any>;
    dialogProps: Omit<DialogProps, "open">;
    subcomponentProps: {
        dialogTitleProps?: DialogTitleProps;
        dialogContentProps?: DialogContentProps;
        dialogContentTextProps?: DialogContentTextProps;
        dialogActionsProps?: DialogActionsProps;
        formikProps?: Partial<FormikProps<Values>>;
        formikFormProps?: FormikFormProps;
    };
    customContent: undefined | React.ReactNode;
}>;
export declare type OpenDialog = <T extends string>(options: DialogOptions<T>) => void;
declare type ContextType = {
    openDialog: OpenDialog;
    closeDialog: () => void;
};
export declare const DialogProvider: React.FC;
export declare const useDialog: () => ContextType;
export {};
